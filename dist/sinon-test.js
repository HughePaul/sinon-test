!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.sinonTest=e()}(this,function(){"use strict";function t(t,e,n){if(e){if(t.restore(),n)return;throw e}t.verifyAndRestore()}function e(e,n){return n&&u.isPromise(n)?n.then(function(n){return t(e),n},function(n){t(e,n||Error("Promise rejected with no/falsy error"))}):(t(e),n)}function n(e,n,o){n&&u.isPromise(n)&&t(e,Error("Your test should take a callback *or* return a promise. It should not do both.")),o||t(e)}function o(o,r){function i(e,n,i,c){r=o.getConfig(r||p),r.injectInto=r.injectIntoThis&&e||r.injectInto;var s,f=o.sandbox.create(r),u=n.length&&n[n.length-1];"function"==typeof u&&(n[n.length-1]=function(e){t(f,e,!0),u(e)});try{s=i.apply(e,n.concat(f.args))}catch(e){t(f,e)}return c(f,s,"function"==typeof u)}if(!u.isSinon(o))throw new TypeError("expected sinon object");return function(t){var o=typeof t;if("function"!==o)throw new TypeError("sinon.test needs to wrap a test function, got "+o);return t.length?function(e){return i(this,a.call(arguments),t,n)}:function(){return i(this,a.call(arguments),t,e)}}}function r(t,e,n){return function(){e&&e.apply(this,arguments);var o,r;try{r=t.apply(this,arguments)}catch(t){o=t}if(n&&n.apply(this,arguments),o)throw o;return r}}function i(t,e){var n=l.configure(t,e);return function(t,e){if(!t||"object"!=typeof t)throw new TypeError("sinon-test.testCase needs an object with test functions");e=e||"test";var o,i,c,s=RegExp("^"+e),f={},u=t.setUp,a=t.tearDown;for(o in t)t.hasOwnProperty(o)&&!/^(setUp|tearDown)$/.test(o)&&(i=t[o],"function"==typeof i&&s.test(o)?(c=i,(u||a)&&(c=r(i,u,a)),f[o]=n(c)):f[o]=t[o]);return f}}var c=function(t){return"object"==typeof t&&"function"==typeof t.then},s=function(t){return!!t&&"object"==typeof t&&"function"==typeof t.getConfig&&!!t.sandbox&&"object"==typeof t.sandbox&&"function"==typeof t.sandbox.create},f={isPromise:c,isSinon:s},u=f,a=Array.prototype.slice,p={injectIntoThis:!0,injectInto:null,properties:["spy","stub","mock","clock","server","requests"],useFakeTimers:!0,useFakeServer:!0},y=o,h={configure:y},l=h;return{configureTest:h.configure,configureTestCase:{configure:i}.configure}});
